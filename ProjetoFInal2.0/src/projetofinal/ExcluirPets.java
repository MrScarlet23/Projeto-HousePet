package projetofinal;

import Dados.centroDeAdoção;
import Banco.CentroAdoçãoBD;
import Banco.Conexao;
import Banco.DoadoresBD;
import Banco.UsuariosBD;
import Dados.Doadores;
import Dados.Usuarios;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import Dados.CadastroPets;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aluno
 */
public class ExcluirPets extends javax.swing.JFrame {

    public TelaCadastroPets TelaCadastroPets;
    private centroDeAdoção centroDeAdoção;
    private CentroAdoçãoBD CentroAdoçãoBD;
    private AlterarCadastroDoador AlterarCadastroDoador;
    private telaEspeciePet telaEspeciePet;
    private CadastroPets CadastroPets;
    
 Connection connection = Conexao.getInstance().getConnection();
    
    
            
    public ExcluirPets() {
        initComponents();
       
        
        TelaCadastroPets = new TelaCadastroPets();
        centroDeAdoção = new centroDeAdoção();
        CentroAdoçãoBD = new CentroAdoçãoBD();
        AlterarCadastroDoador = new AlterarCadastroDoador();
        telaEspeciePet = new telaEspeciePet();
        CadastroPets = new CadastroPets();
    }
    
    
    public void setNomeText(String nome){
        TxtNomePerfil1.setText(nome);
    }
    
    public void limparCampos(){
        TxtIdPet.setText("");
        TxtNomeDoador.setText("");
        DefaultTableModel modelo = (DefaultTableModel) TabelaPets.getModel();
        modelo.setNumRows(0);  // Limpa todas as linhas da tabela
        modelo.fireTableDataChanged();
    }
    
     public void limparCamposTabela(){
        DefaultTableModel modelo = (DefaultTableModel) TabelaPets.getModel();
        modelo.setNumRows(0);  // Limpa todas as linhas da tabela
        modelo.fireTableDataChanged();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        sexoPerfil = new javax.swing.JLabel();
        TxtNomePerfil1 = new javax.swing.JTextField();
        BotaoSairPerfil = new javax.swing.JButton();
        BotaoExcluirPerfil = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaPets = new javax.swing.JTable();
        BotaoExcluirPerfil1 = new javax.swing.JButton();
        TxtIdPet = new javax.swing.JTextField();
        sexoPerfil2 = new javax.swing.JLabel();
        sexoPerfil3 = new javax.swing.JLabel();
        TxtNomeDoador = new javax.swing.JTextField();
        BotaoCarregarDados = new javax.swing.JButton();
        BotaoExcluirPerfil2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(77, 255, 148));
        jPanel1.setForeground(new java.awt.Color(77, 255, 148));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        sexoPerfil.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        sexoPerfil.setText("Doador");

        TxtNomePerfil1.setEditable(false);
        TxtNomePerfil1.setBackground(new java.awt.Color(204, 204, 204));
        TxtNomePerfil1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        BotaoSairPerfil.setBackground(new java.awt.Color(77, 255, 148));
        BotaoSairPerfil.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        BotaoSairPerfil.setText("Sair");
        BotaoSairPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSairPerfilActionPerformed(evt);
            }
        });

        BotaoExcluirPerfil.setBackground(new java.awt.Color(77, 255, 148));
        BotaoExcluirPerfil.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        BotaoExcluirPerfil.setText("Excluir dados do pet");
        BotaoExcluirPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoExcluirPerfilActionPerformed(evt);
            }
        });

        TabelaPets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Especie", "Outro", "Cor", "Raça", "Idade", "Tipo Idade", "Porte", "Sexo", "Email", "Contato"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabelaPets);

        BotaoExcluirPerfil1.setBackground(new java.awt.Color(77, 255, 148));
        BotaoExcluirPerfil1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        BotaoExcluirPerfil1.setText("Buscar pets");
        BotaoExcluirPerfil1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoExcluirPerfil1ActionPerformed(evt);
            }
        });

        TxtIdPet.setEditable(false);
        TxtIdPet.setBackground(new java.awt.Color(204, 204, 204));
        TxtIdPet.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        sexoPerfil2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        sexoPerfil2.setText("ID Pet");

        sexoPerfil3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        sexoPerfil3.setText("Doador");

        TxtNomeDoador.setEditable(false);
        TxtNomeDoador.setBackground(new java.awt.Color(204, 204, 204));
        TxtNomeDoador.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        BotaoCarregarDados.setBackground(new java.awt.Color(77, 255, 148));
        BotaoCarregarDados.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        BotaoCarregarDados.setText("Carregar dados");
        BotaoCarregarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCarregarDadosActionPerformed(evt);
            }
        });

        BotaoExcluirPerfil2.setBackground(new java.awt.Color(77, 255, 148));
        BotaoExcluirPerfil2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        BotaoExcluirPerfil2.setText("Voltar");
        BotaoExcluirPerfil2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoExcluirPerfil2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(sexoPerfil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotaoSairPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(BotaoCarregarDados)
                                .addGap(18, 18, 18)
                                .addComponent(BotaoExcluirPerfil)
                                .addGap(18, 18, 18)
                                .addComponent(BotaoExcluirPerfil2))
                            .addComponent(TxtNomePerfil1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(BotaoExcluirPerfil1)
                                .addGap(132, 132, 132)
                                .addComponent(sexoPerfil2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TxtIdPet, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(sexoPerfil3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TxtNomeDoador, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 25, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(sexoPerfil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtNomePerfil1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoExcluirPerfil1)
                    .addComponent(TxtIdPet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sexoPerfil2)
                    .addComponent(sexoPerfil3)
                    .addComponent(TxtNomeDoador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addComponent(BotaoSairPerfil)
                        .addGap(111, 111, 111))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotaoExcluirPerfil)
                            .addComponent(BotaoCarregarDados)
                            .addComponent(BotaoExcluirPerfil2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setText("Excluir Pets");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
        
    private void BotaoSairPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSairPerfilActionPerformed
    
    }//GEN-LAST:event_BotaoSairPerfilActionPerformed

    private void BotaoExcluirPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoExcluirPerfilActionPerformed

            if(TxtNomeDoador.getText() == null){
                
               JOptionPane.showMessageDialog(null, "É necessário carregar os dados antes"); 
            }
        
            else if(TxtNomePerfil1.getText().equals(TxtNomeDoador.getText())){
            
            int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir a conta?");
            if (resposta == JOptionPane.YES_OPTION) {
               
                ExcluirPet();
                JOptionPane.showMessageDialog(null, "Cadastro de pet removido");
                limparCampos();
                listarPets();
           }
            else if (resposta == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Operação cancelada");
           } else {
                JOptionPane.showMessageDialog(null, "Operação cancelada");
           }
        }
        else{
            JOptionPane.showMessageDialog(null, "Sem permissão para apagar os dados desse cadastro!");
        }
    }//GEN-LAST:event_BotaoExcluirPerfilActionPerformed

    private void BotaoExcluirPerfil1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoExcluirPerfil1ActionPerformed
         listarPets();
    }//GEN-LAST:event_BotaoExcluirPerfil1ActionPerformed

    private void BotaoCarregarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCarregarDadosActionPerformed
        CarregarCampos();
    }//GEN-LAST:event_BotaoCarregarDadosActionPerformed

    private void BotaoExcluirPerfil2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoExcluirPerfil2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_BotaoExcluirPerfil2ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoCarregarDados;
    private javax.swing.JButton BotaoExcluirPerfil;
    private javax.swing.JButton BotaoExcluirPerfil1;
    private javax.swing.JButton BotaoExcluirPerfil2;
    private javax.swing.JButton BotaoSairPerfil;
    private javax.swing.JTable TabelaPets;
    private javax.swing.JTextField TxtIdPet;
    private javax.swing.JTextField TxtNomeDoador;
    private javax.swing.JTextField TxtNomePerfil1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel sexoPerfil;
    private javax.swing.JLabel sexoPerfil2;
    private javax.swing.JLabel sexoPerfil3;
    // End of variables declaration//GEN-END:variables

    private void listarPets(){
        
        try {
            
            limparCamposTabela();
            
            String nome = TxtNomePerfil1.getText();

    DefaultTableModel modelo = (DefaultTableModel) TabelaPets.getModel();
    modelo.setNumRows(0);
    
    ArrayList<CadastroPets> lista = CentroAdoçãoBD.MostraPetsCentro();


    for (int num = 0; num < lista.size(); num++) {
        modelo.addRow(new Object[]{
                lista.get(num).getId(),
                lista.get(num).getEspecie(),
                lista.get(num).getOutro(),
                lista.get(num).getCor(),
                lista.get(num).getRaca(),
                lista.get(num).getIdade(),
                lista.get(num).getTipoIdade(),
                lista.get(num).getPorte(),
                lista.get(num).getSexo(),
                lista.get(num).getEmail(),
                lista.get(num).getContato()
        });
    }

} catch (Exception erro) {
    JOptionPane.showMessageDialog(null, "Erro de autenticação: " + erro.getMessage());
}

    
    }
    
    private void ExcluirPet(){
        int nomeDoador;
        
        nomeDoador = Integer.parseInt(TxtIdPet.getText());
        
        centroDeAdoção objCentro = new centroDeAdoção();
        objCentro.setId(nomeDoador);
        
        CentroAdoçãoBD objCentroBD = new CentroAdoçãoBD();
        objCentroBD.ExcluirPets(objCentro);
        
    }
    
    //private void RemoverDoador(){
      //  String sql = "DELETE from doadores WHERE Nome = ?";
        //connection = Conexao.getInstance().getConnection();
        //PreparedStatement stmt = null;
        //try {
            
          //  stmt = connection.prepareStatement(sql);
            //stmt.setString(1, TxtNomePerfil.getText());
            //stmt.executeUpdate();
            
        //} catch (Exception e) {
          //  JOptionPane.showConfirmDialog(null, e);
        //}
    //}    
    
    private void CarregarCampos(){
        int setar = TabelaPets.getSelectedRow();
        
        TxtIdPet.setText(TabelaPets.getModel().getValueAt(setar, 0).toString());
        TxtNomeDoador.setText(TabelaPets.getModel().getValueAt(setar, 9).toString());
        
    }

}
